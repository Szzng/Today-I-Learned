# # https://www.acmicpc.net/problem/1931

"""
# 문제
한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다.
각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고,
각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자.
단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다.
회의의 시작시간과 끝나는 시간이 같을 수도 있다.
이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.

# 입력
첫째 줄에 회의의 수 N(1 ≤ N ≤ 10^5)이 주어진다.
둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작 시간과 끝나는 시간이 주어진다.
시작 시간과 끝나는 시간은 2^31-1보다 작거나 같은 자연수 또는 0이다.

# 시간제한: 2초
# 시간복잡도: O()

# 풀이
현재 회의의 종료 시간이 빠를수록 다음 회의와 겹치지 않게 시작하는 데 유리함.
따라서 종료 시간이 빠른 순서대로 정렬해 겹치지 않는 회의실을 선택하는 문제

리스트 2중 조건 정렬 방법: 튜플 -> 리스트.sort(key=lamda x: (x[1], x[0]))
"""

import sys

read = sys.stdin.readline

N = int(read())
nums = [list(map(int, read().split())) for _ in range(N)]

# 종료 시간이 빠른 순서대로 정렬 -> 종료 시각으로 1차 정렬, 시작 시각으로 2차 정렬
nums.sort(key=lambda x: (x[1], x[0]))

count = 0
end_time = 0

for num in nums:
    if num[0] >= end_time:
        end_time = num[1]
        count += 1

print(count)
